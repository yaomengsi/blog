{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> \\[ \\cos x=\\sum_{k=0}^{\\infty}\\frac{(-1)^k}{(2k)!}x^{2k} \\]"},{"location":"blog/","title":"Blog","text":""},{"location":"config/alacritty/","title":"alacritty","text":"/mnt/c/Users/m/AppData/Roaming/alacritty/alacritty.toml<pre><code>[env]\n# TERM = \"xterm-256color\"\n\n[terminal.shell]\nprogram = 'C:/Windows/System32/wsl.exe -d Ubuntu'\nargs = [\"--cd ~\"]\n\n[font]\nnormal = { family = 'Sarasa Fixed SC Nerd Font', style = 'Regular' }\n</code></pre>"},{"location":"config/docker/","title":"docker","text":""},{"location":"config/docker/#docker-pull-proxy","title":"docker pull proxy","text":"<p>\u8981\u4e3a <code>docker pull</code> \u8bbe\u7f6e\u4ee3\u7406\uff08\u89e3\u51b3\u62c9\u53d6\u955c\u50cf\u65f6\u7684\u7f51\u7edc\u95ee\u9898\uff09\uff0c\u9700\u914d\u7f6e Docker \u5b88\u62a4\u8fdb\u7a0b\u7684\u4ee3\u7406\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u6b65\u9aa4\uff1a</p>"},{"location":"config/docker/#docker-docker-pull","title":"\ud83d\udc33 \u914d\u7f6e Docker \u5b88\u62a4\u8fdb\u7a0b\u4ee3\u7406\uff08\u9002\u7528\u4e8e <code>docker pull</code>\uff09","text":"<p>\u5f53 Docker \u5b88\u62a4\u8fdb\u7a0b\u9700\u8981\u901a\u8fc7\u4ee3\u7406\u8bbf\u95ee\u5916\u7f51\uff08\u5982 Docker Hub\uff09\u65f6\uff1a</p> <ol> <li>\u521b\u5efa\u4ee3\u7406\u914d\u7f6e\u6587\u4ef6 </li> </ol> <pre><code>sudo mkdir -p /etc/systemd/system/docker.service.d\nsudo nano /etc/systemd/system/docker.service.d/proxy.conf\n</code></pre> <ol> <li>\u5199\u5165\u4ee3\u7406\u914d\u7f6e\uff08\u66ff\u6362\u4e3a\u4f60\u7684\u4ee3\u7406\u5730\u5740\uff09  </li> </ol> <pre><code>[Service]\n# HTTP/HTTPS \u4ee3\u7406\nEnvironment=\"HTTP_PROXY=http://proxy.example.com:8080\"\nEnvironment=\"HTTPS_PROXY=http://proxy.example.com:8080\"\n\n# \u6392\u9664\u4ee3\u7406\u7684\u5185\u7f51\u5730\u5740/\u57df\u540d\uff08\u91cd\u8981\uff01\uff09\nEnvironment=\"NO_PROXY=localhost,127.0.0.1,::1,10.*,*.your-company.com,docker-registry.example.com\"\n</code></pre> <ul> <li>\ud83d\udd11 \u82e5\u4ee3\u7406\u9700\u8981\u8ba4\u8bc1\uff1a<code>http://\u7528\u6237\u540d:\u5bc6\u7801@proxy.example.com:8080</code></li> <li> <p>\ud83c\udf10 <code>NO_PROXY</code> \u9700\u6392\u9664\u5185\u7f51\u5730\u5740\uff08\u5982 Kubernetes\u3001\u79c1\u6709\u4ed3\u5e93\uff09\uff0c\u907f\u514d\u4ee3\u7406\u5e72\u6270</p> </li> <li> <p>\u91cd\u542f Docker \u670d\u52a1\u751f\u6548 </p> </li> </ul> <pre><code>sudo systemctl daemon-reload         # \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\nsudo systemctl restart docker        # \u91cd\u542f Docker\n</code></pre> <ol> <li>\u9a8c\u8bc1\u4ee3\u7406\u662f\u5426\u751f\u6548 </li> </ol> <pre><code>systemctl show docker --property Environment | grep PROXY\n</code></pre> <p>\u8f93\u51fa\u5e94\u663e\u793a\u4f60\u8bbe\u7f6e\u7684\u4ee3\u7406\u53d8\u91cf\uff1a</p> <pre><code>Environment=HTTP_PROXY=http://proxy.example.com:8080 HTTPS_PROXY=... NO_PROXY=...\n</code></pre>"},{"location":"config/docker/#_1","title":"\ud83d\udd0d \u9a8c\u8bc1\u4ee3\u7406\u5de5\u4f5c\u72b6\u6001","text":"<p>\u8fd0\u884c\u6d4b\u8bd5\u62c9\u53d6\u547d\u4ee4\uff1a</p> <pre><code>docker pull hello-world\n</code></pre> <ul> <li>\u2705 \u6210\u529f\uff1a\u6b63\u5e38\u4e0b\u8f7d\u955c\u50cf</li> <li>\u274c \u5931\u8d25\uff1a\u68c0\u67e5\u4ee3\u7406\u5730\u5740\u662f\u5426\u53ef\u8fbe\uff0c\u6216\u67e5\u770b\u65e5\u5fd7\uff1a</li> </ul> <pre><code>journalctl -u docker.service -f  # \u5b9e\u65f6\u67e5\u770b Docker \u65e5\u5fd7\n</code></pre>"},{"location":"config/docker/#_2","title":"\u26a0\ufe0f \u7279\u6b8a\u573a\u666f\u5904\u7406","text":"<ol> <li>Docker Desktop (Windows/Mac)    \u901a\u8fc7 GUI \u8bbe\u7f6e\uff1a</li> <li>\u53f3\u952e Docker \u56fe\u6807 \u2192 Settings \u2192 Resources \u2192 Proxies</li> <li> <p>\u586b\u5165 <code>HTTP/HTTPS Proxy</code> \u548c <code>Bypass domains</code>\uff08\u7b49\u6548\u4e8e <code>NO_PROXY</code>\uff09</p> </li> <li> <p>\u4e34\u65f6\u6d4b\u8bd5\uff08\u4e0d\u4fee\u6539\u670d\u52a1\u914d\u7f6e\uff09    \u76f4\u63a5\u4e3a <code>docker</code> \u547d\u4ee4\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff1a</p> </li> </ol> <pre><code>sudo HTTP_PROXY=http://proxy:8080 HTTPS_PROXY=http://proxy:8080 docker pull nginx\n</code></pre>"},{"location":"config/docker/#_3","title":"\ud83d\udccc \u5173\u952e\u70b9\u603b\u7ed3","text":"\u95ee\u9898\u7c7b\u578b \u89e3\u51b3\u65b9\u6848 <code>docker pull</code> \u62c9\u955c\u50cf \u4fee\u6539 Docker \u5b88\u62a4\u8fdb\u7a0b\u914d\u7f6e\uff08<code>systemd</code>\uff09 \u5bb9\u5668\u5185\u7f51\u7edc\u4ee3\u7406 \u4f7f\u7528 <code>-e</code> \u73af\u5883\u53d8\u91cf\u542f\u52a8\u5bb9\u5668 \u4ee3\u7406\u9700\u8981\u8ba4\u8bc1 \u5728 URL \u4e2d\u5305\u542b <code>user:password@</code> \u5185\u7f51\u8d44\u6e90\u76f4\u8fde <code>NO_PROXY</code> \u6392\u9664\u76f8\u5173 IP/\u57df\u540d <p>\ud83d\udca1 90% \u7684\u4ee3\u7406\u95ee\u9898\u6e90\u4e8e <code>NO_PROXY</code> \u914d\u7f6e\u4e0d\u5f53\uff08\u5982\u6f0f\u6389\u5185\u7f51\u5730\u5740\uff09\uff0c\u8bf7\u4ed4\u7ec6\u68c0\u67e5\uff01</p>"},{"location":"config/git/","title":"git","text":"<pre><code># cat ~/.ssh/config\nHost github.com\n  Hostname ssh.github.com\n  Prot 443\n  User git\n  IdentityFile ~/.ssh/id_rsa\n  # ProxyCommand nc -v -x `ip route show | grep -i default | awk '{ print $3}'`:7897 %h %p\n  ProxyCommand connect -H `ip route show | grep -i default | awk '{ print $3}'`:7897 %h %p\n</code></pre> <pre><code># git config --global http.https://github.com.proxy http://`ip route show | grep -i default | awk '{ print $3}'`:7897\n# cat ~/.githconfig\n[http \"https://github.com\"]\n  proxy = socks5://127.0.0.1:1086\n</code></pre>"},{"location":"config/python/","title":"python","text":""},{"location":"config/python/#pip","title":"pip","text":"<pre><code>; cat ~/.config/pip/pip.conf\n[global]\nindex-url = https://mirrors.aliyun.com/pypi/simple\n; extra-index-url = http://mirrors.cloud.tencent.com/pypi/simple\n;                 https://mirrors.tuna.tsinghua.edu.cn/simple\n;                 http://pypi.douban.com/simple\n;                 https://pypi.org/simple\n;                 https://mirrors.aliyun.com/pypi/simple\ntrusted-host = pypi.org\n                files.pythonhosted.org\n                pypi.python.org\n                mirrors.tuna.tsinghua.edu.cn\n                mirrors.aliyun.com\n                mirrors.cloud.tencent.com\n                pypi.douban.com\n</code></pre> <p><code>cat ~/.config/uv/uv.toml</code></p> <pre><code>[[index]]\nurl = \"https://mirrors.aliyun.com/pypi/simple/\"\ndefault = true\n\n[[index]]\nname = 'aliyun'\nurl = \"https://mirrors.aliyun.com/pypi/simple/\"\n\n[[index]]\nname = 'tencent'\nurl = \"http://mirrors.cloud.tencent.com/pypi/simple\"\n\n[[index]]\nname = 'tsinghua'\nurl = \"https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple\"\n\n[[index]]\nname = 'douban'\nurl = \"http://pypi.douban.com/simple\"\n\n[[index]]\nname = 'ustc'\nurl = \"https://pypi.mirrors.ustc.edu.cn/simple/\"\n\n[[index]]\nname = \"pypi\"\nurl = \"https://pypi.org/simple\"\n</code></pre>"},{"location":"config/terminal/","title":"terminal","text":""},{"location":"config/terminal/#direnv","title":"direnv","text":"<pre><code>export VIRTUAL_ENV=.venv\nsource .venv/bin/activate\n</code></pre>"},{"location":"config/wsl/","title":"wsl","text":""},{"location":"config/wsl/#wsl-proxy-to-host-ipport","title":"wsl proxy to host ip:port","text":"<pre><code># for wsl ip\nexport HOST_IP=\"$(ip route show | grep -i default | awk '{ print $3}')\"\nexport WSL_IP=\"$(hostname -I | awk '{print $1}')\"\nexport ARCH_IP=\"$(wsl.exe -d Arch ip addr show eth0 | grep \"inet \" | awk '{print $2}'  | cut -d '/' -f1)\"\nexport FEDORA_IP=\"$(wsl.exe -d Fedora ip addr show eth0 | grep \"inet \" | awk '{print $2}'  | cut -d '/' -f1)\"\n</code></pre> <pre><code>host_ip=$(ip route show | grep -i default | awk '{ print $3}')\nwsl_ip=$(hostname -I | awk '{print $1}')\necho \"host ip:\" ${host_ip}\necho \"wsl ip:\" ${wsl_ip}\n\nport=7897\nproxy_http=\"http://${host_ip}:${port}\"\n\nexport http_proxy=\"${proxy_http}\"\nexport HTTP_PROXY=\"${proxy_http}\"\nexport https_proxy=\"${proxy_http}\"\nexport HTTPS_PROXY=\"${proxy_http}\"\nexport all_proxy=\"${proxy_http}\"\nexport ALL_PROXY=\"${proxy_http}\"\necho \"proxy:\" ${proxy_http}\n</code></pre> <p><code>cat /etc/fonts/local.conf</code></p> <pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;!DOCTYPE fontconfig SYSTEM \"fonts.dtd\"&gt;\n&lt;fontconfig&gt;\n    &lt;dir&gt;/mnt/c/Windows/Fonts&lt;/dir&gt;\n    &lt;dir&gt;/mnt/c/Users/m/AppData/Local/Microsoft/Windows/Fonts&lt;/dir&gt;\n&lt;/fontconfig&gt;\n</code></pre>"},{"location":"config/zsh/","title":"zsh","text":"<ul> <li>nerd font</li> <li>starship</li> <li>nvim</li> </ul> ~/.zshrc<pre><code># If you come from bash you might have to change your $PATH.\n# export PATH=$HOME/bin:/usr/local/bin:$PATH\nexport PATH=\"$HOME/.local/bin:$PATH\"\n\n# Path to your oh-my-zsh installation.\nexport ZSH=\"$HOME/.oh-my-zsh\"\n\nZSH_THEME=\"robbyrussell\"\n\nplugins=(\n    git\n    zsh-autosuggestions\n    fast-syntax-highlighting\n    direnv\n)\n\nsource $ZSH/oh-my-zsh.sh\n\nfpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src\n\n# config\n\n# . \"$HOME/.local/bin/env\"\n. \"$HOME/.cargo/env\"\nexport RUSTC_WRAPPER=\"/home/m/.cargo/bin/sccache\"\n\n\nexport PYENV_ROOT=\"$HOME/.pyenv\"\ncommand -v pyenv &gt;/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"\neval \"$(pyenv init -)\"\n\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] &amp;&amp; \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n\nexport PATH=\"$PATH:/opt/nvim/bin\"\nalias astronvim=\"NVIM_APPNAME=AstroNvim nvim\"\nalias mnvim=\"NVIM_APPNAME=mnvim nvim\"\n# alias nvide=\"NVIM_APPNAME=AstroNvim neovide --wsl\"\n# alias nvide=\"WAYLAND_DISPLAY= WINIT_UNIX_BACKEND=x11 NVIM_APPNAME=mnvim neovide --wsl\"\nalias nvide=\"NVIM_APPNAME=mnvim neovide\"\n\n# starship\neval \"$(starship init zsh)\"\n\n# uv\neval \"$(uv generate-shell-completion zsh)\"\neval \"$(uvx --generate-shell-completion zsh)\"\n\neval \"$(direnv hook zsh)\"\n\neval \"$(starship init zsh)\"\n\n# proxy for wsl\n# eval \"$(cat ~/proxy_clash.sh)\"\n\n# for wsl ip\nexport HOST_IP=\"$(ip route show | grep -i default | awk '{ print $3}')\"\nexport WSL_IP=\"$(hostname -I | awk '{print $1}')\"\n\n# clash verge\nexport _HOST_PROXY_PORT=7897\n# mihomo\nexport _HOST_PROXY_PORT=7890\n# karing all\nexport _HOST_PROXY_PORT=3066\n# karing rules\nexport _HOST_PROXY_PORT=3067\n\nexport HOST_PROXY_PORT=$_HOST_PROXY_PORT\nexport HOST_PROXY_HTTP=\"http://${HOST_IP}:${HOST_PROXY_PORT}\"\n\nunset_proxy() {\n    unset http_proxy\n    unset HTTP_PROXY\n    unset https_proxy\n    unset HTTPS_PROXY\n    unset all_proxy\n    unset ALL_PROXY\n}\n\nset_proxy() {\n    echo \"host ip:\" \"${HOST_IP}\"\n    echo \"wsl ip:\" \"${WSL_IP}\"\n    proxy_http=\"${HOST_PROXY_HTTP}\"\n    export http_proxy=\"${proxy_http}\"\n    export HTTP_PROXY=\"${proxy_http}\"\n    export https_proxy=\"${proxy_http}\"\n    export HTTPS_PROXY=\"${proxy_http}\"\n    export all_proxy=\"${proxy_http}\"\n    export ALL_PROXY=\"${proxy_http}\"\n    echo \"proxy:\" \"${proxy_http}\"\n}\n\nexport PATH=$PATH:/usr/local/go/bin\n</code></pre> <ol> <li>proxy port</li> </ol>"},{"location":"en/","title":"en","text":"<p>test en</p>"}]}